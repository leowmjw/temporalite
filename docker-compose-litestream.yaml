version: "3.9"
services:
  minio:
    container_name: minio
    profiles: ["litestream2"]
    image: minio/minio
    networks:
      - temporal-network
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data:/export
    command: server /export --console-address ":9001"
  litestream:
    container_name: litestream
    profiles: ["litestream"]
    # depends_on:
    #   - minio
    environment:
      - LITESTREAM_ACCESS_KEY_ID=${LITESTREAM_ACCESS_KEY_ID}
      - LITESTREAM_SECRET_ACCESS_KEY=${LITESTREAM_SECRET_ACCESS_KEY}
      - REPLICA_URL=${REPLICA_URL}
      - DB_PATH=/opt/temporaldb/data.db
    image: litestream/litestream
    networks:
      - temporal-network
    volumes:
      - ./db:/opt/temporaldb
      - ./litestream.yml:/etc/litestream.yml
    entrypoint: /bin/sh -c
    command:
      # - env
      # - env && litestream restore -o $${DB_PATH} -if-replica-exists s3://$${REPLICA_URL} && litestream replicate $${DB_PATH} s3://$${REPLICA_URL}
      # - cat /etc/litestream.yml && litestream replicate $${DB_PATH} s3://$${REPLICA_URL}
      # - litestream restore -if-replica-exists -v "$${DB_PATH}" && litestream replicate  $${DB_PATH} s3://$${REPLICA_URL}
      # Restore only if file not there; also the temporalite command per version
      - if [[ ! -f "$${DB_PATH}" ]]; then litestream restore -if-replica-exists -v "$${DB_PATH}"; fi && litestream replicate  $${DB_PATH} s3://$${REPLICA_URL}
  temporal:
    container_name: temporal
    # depends_on:
    #   - litestream
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: leowmjw/temporalite
    networks:
      - temporal-network
    ports:
      - "7233:7233"
    volumes:
      - ./db:/opt/temporaldb
    command: "--ip 0.0.0.0 -n default -f /opt/temporaldb/data.db"
  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.13.1
    networks:
      - temporal-network
    stdin_open: true
    tty: true
  temporal-web:
    container_name: temporal-web
    depends_on:
      - temporal
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
      - TEMPORAL_PERMIT_WRITE_API=true
    image: temporalio/web:1.13.0
    networks:
      - temporal-network
    ports:
      - "8088:8088"
networks:
  temporal-network:
    driver: bridge
    name: temporal-network
